import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as o,o as r}from"./app-rQI8KFp-.js";const n={};function l(i,e){return r(),a("div",null,e[0]||(e[0]=[o('<h1 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h1><h2 id="数据类型的转换" tabindex="-1"><a class="header-anchor" href="#数据类型的转换"><span>数据类型的转换</span></a></h2><ul><li>Number() 函数：将任意类型的值转化为数值。这个函数比 parseInt 更加严格，只要有一个字符无法转换为数值，就会返回 NaN。</li><li>String() 函数：将任意类型的值转化成字符串。</li><li>Boolean() 函数：将任意类型的值转为布尔值，只有 undefined、null、0、NaN和空字符串会被转换成 false，所有对象的转换结果都是 true，包括 false 的布尔对象。</li></ul><h2 id="错误处理机制" tabindex="-1"><a class="header-anchor" href="#错误处理机制"><span>错误处理机制</span></a></h2><p>Error 实例对象：所有抛出的错误都是这个构造函数的实例，<code>Error()</code> 构造函数接受一个参数表示错误提示。</p><p>throw 语句：手动中断程序执行，抛出一个错误。throw 可以抛出任何类型的值。</p><h2 id="console-对象与控制台" tabindex="-1"><a class="header-anchor" href="#console-对象与控制台"><span>console 对象与控制台</span></a></h2><p>console 对象的静态方法：</p><ul><li>console.log()。</li><li>console.info()。</li><li>console.debug()。</li><li>console.warn()。</li><li>console.error()。</li></ul>',9)]))}const p=t(n,[["render",l]]),d=JSON.parse('{"path":"/javascript/docs/grammar.html","title":"语法","lang":"zh-CN","frontmatter":{"description":"语法 数据类型的转换 Number() 函数：将任意类型的值转化为数值。这个函数比 parseInt 更加严格，只要有一个字符无法转换为数值，就会返回 NaN。 String() 函数：将任意类型的值转化成字符串。 Boolean() 函数：将任意类型的值转为布尔值，只有 undefined、null、0、NaN和空字符串会被转换成 false，所有对...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-12-25T14:08:57.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/javascript/docs/grammar.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"语法"}],["meta",{"property":"og:description","content":"语法 数据类型的转换 Number() 函数：将任意类型的值转化为数值。这个函数比 parseInt 更加严格，只要有一个字符无法转换为数值，就会返回 NaN。 String() 函数：将任意类型的值转化成字符串。 Boolean() 函数：将任意类型的值转为布尔值，只有 undefined、null、0、NaN和空字符串会被转换成 false，所有对..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2021-12-25T14:08:57.000Z"}],["meta",{"property":"article:modified_time","content":"2021-12-25T14:08:57.000Z"}]]},"git":{"createdTime":1640441337000,"updatedTime":1640441337000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":0.72,"words":215},"filePathRelative":"javascript/docs/grammar.md","excerpt":"\\n<h2>数据类型的转换</h2>\\n<ul>\\n<li>Number() 函数：将任意类型的值转化为数值。这个函数比 parseInt 更加严格，只要有一个字符无法转换为数值，就会返回 NaN。</li>\\n<li>String() 函数：将任意类型的值转化成字符串。</li>\\n<li>Boolean() 函数：将任意类型的值转为布尔值，只有 undefined、null、0、NaN和空字符串会被转换成 false，所有对象的转换结果都是 true，包括 false 的布尔对象。</li>\\n</ul>","autoDesc":true}');export{p as comp,d as data};
