import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as r,o as i}from"./app-rQI8KFp-.js";const n={};function o(p,e){return i(),a("div",null,e[0]||(e[0]=[r('<h1 id="享元模式" tabindex="-1"><a class="header-anchor" href="#享元模式"><span>享元模式</span></a></h1><h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h2><p>使用共享对象可有效地支持大量的细粒度的对象。</p><h2 id="角色" tabindex="-1"><a class="header-anchor" href="#角色"><span>角色</span></a></h2><ul><li>Flyweight 抽象享元角色：一个产品的抽象类，定义出对象的外部状态和内部状态。</li><li>ConcreteFlyweight 具体享元角色：具体产品类，实现抽象业务，内部状态应该与环境无关，一个操作不应该同时修改了外部状态和内部状态。</li><li>unsharedConcreteFlyweight 不可共享的享元角色：不存在外部状态或安全要求不能够使用共享技术的对象。</li><li>FlyweightFactory 享元工厂：构造池容器，同时提供从池中获取对象的方法。</li></ul><p>TODO</p>',6)]))}const h=t(n,[["render",o]]),s=JSON.parse('{"path":"/design-pattern/docs/fly_weight.html","title":"享元模式","lang":"zh-CN","frontmatter":{"description":"享元模式 定义 使用共享对象可有效地支持大量的细粒度的对象。 角色 Flyweight 抽象享元角色：一个产品的抽象类，定义出对象的外部状态和内部状态。 ConcreteFlyweight 具体享元角色：具体产品类，实现抽象业务，内部状态应该与环境无关，一个操作不应该同时修改了外部状态和内部状态。 unsharedConcreteFlyweight 不...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"享元模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-12-30T09:14:08.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/design-pattern/docs/fly_weight.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"享元模式"}],["meta",{"property":"og:description","content":"享元模式 定义 使用共享对象可有效地支持大量的细粒度的对象。 角色 Flyweight 抽象享元角色：一个产品的抽象类，定义出对象的外部状态和内部状态。 ConcreteFlyweight 具体享元角色：具体产品类，实现抽象业务，内部状态应该与环境无关，一个操作不应该同时修改了外部状态和内部状态。 unsharedConcreteFlyweight 不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2021-12-30T09:14:08.000Z"}],["meta",{"property":"article:modified_time","content":"2021-12-30T09:14:08.000Z"}]]},"git":{"createdTime":1640855648000,"updatedTime":1640855648000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":0.56,"words":168},"filePathRelative":"design-pattern/docs/fly_weight.md","excerpt":"\\n<h2>定义</h2>\\n<p>使用共享对象可有效地支持大量的细粒度的对象。</p>","autoDesc":true}');export{h as comp,s as data};
