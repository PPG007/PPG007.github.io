import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as o,o as a}from"./app-rQI8KFp-.js";const c={};function n(r,t){return a(),i("div",null,t[0]||(t[0]=[o('<h1 id="自定义-git" tabindex="-1"><a class="header-anchor" href="#自定义-git"><span>自定义 Git</span></a></h1><h2 id="忽略文件" tabindex="-1"><a class="header-anchor" href="#忽略文件"><span>忽略文件</span></a></h2><p>在 Git 工作区中创建一个<code>.gitignore</code>文件，将想要忽略的文件名写入，Git就会自动忽略这些文件。</p><p>忽略文件的原则：</p><ul><li>忽略操作系统自动生成的文件。</li><li>忽略编译生成的中间文件、可执行文件等，例如 Java 的 target 文件夹。</li><li>忽略自己的带有敏感信息的配置文件。</li></ul><p>如果不希望排除某个文件而这个文件又可能被通配符包含在了忽略列表中，可以在这个文件前加 <code>!</code> 表示不排除这个文件，例如 <code>!.gitignore</code>。</p><p>如果一个文件被忽略了但还是希望能够添加到暂存区，可以使用 <code>git add -f</code> 强制添加。</p><p>如果希望检查 <code>.gitignore</code> 中的问题，可以使用 <code>git check-ignore</code> 命令检查。</p><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><ul><li>Git 配置文件的位置： <ul><li><code>/etc/gitconfig</code> 文件，包含系统上每一个用户及他们仓库的通用配置，如果使用 <code>git config --system</code> 配置，那么 Git 会读写该文件中的配置变量，需要管理员权限。</li><li><code>~./gitconfig</code> 或者 <code>~/.config/git/config</code> 文件，只针对当前用户，使用 <code>git config --global</code> 会使 Git 读写这个文件。</li><li>每个仓库的 <code>.git/config</code> 文件，只针对该仓库，使用 <code>git config --local</code> 选项使 Git 读写这个文件，默认情况下使用的就是这个文件的配置，但是要进入某个仓库目录才能设置。</li></ul></li><li>配置文件间的优先级关系：按上边的顺序向下一次递增。</li></ul><h2 id="配置别名" tabindex="-1"><a class="header-anchor" href="#配置别名"><span>配置别名</span></a></h2><p>使用 <code>git config [--global] alias.&lt;aliasName&gt; &lt;sourceName&gt;</code> 命令可以实现给一个命令起别名，作用范围根据作用域参数而定。</p>',12)]))}const g=e(c,[["render",n]]),l=JSON.parse('{"path":"/git/docs/customize.html","title":"自定义 Git","lang":"zh-CN","frontmatter":{"description":"自定义 Git 忽略文件 在 Git 工作区中创建一个.gitignore文件，将想要忽略的文件名写入，Git就会自动忽略这些文件。 忽略文件的原则： 忽略操作系统自动生成的文件。 忽略编译生成的中间文件、可执行文件等，例如 Java 的 target 文件夹。 忽略自己的带有敏感信息的配置文件。 如果不希望排除某个文件而这个文件又可能被通配符包含在了...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自定义 Git\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-13T01:18:18.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/git/docs/customize.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"自定义 Git"}],["meta",{"property":"og:description","content":"自定义 Git 忽略文件 在 Git 工作区中创建一个.gitignore文件，将想要忽略的文件名写入，Git就会自动忽略这些文件。 忽略文件的原则： 忽略操作系统自动生成的文件。 忽略编译生成的中间文件、可执行文件等，例如 Java 的 target 文件夹。 忽略自己的带有敏感信息的配置文件。 如果不希望排除某个文件而这个文件又可能被通配符包含在了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-13T01:18:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-13T01:18:18.000Z"}]]},"git":{"createdTime":1640492808000,"updatedTime":1747099098000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"},{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":1.43,"words":429},"filePathRelative":"git/docs/customize.md","excerpt":"\\n<h2>忽略文件</h2>\\n<p>在 Git 工作区中创建一个<code>.gitignore</code>文件，将想要忽略的文件名写入，Git就会自动忽略这些文件。</p>","autoDesc":true}');export{g as comp,l as data};
