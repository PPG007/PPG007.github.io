import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,o as p}from"./app-rQI8KFp-.js";const e={};function l(t,s){return p(),i("div",null,s[0]||(s[0]=[n(`<h1 id="显示数据" tabindex="-1"><a class="header-anchor" href="#显示数据"><span>显示数据</span></a></h1><h2 id="数据提供器" tabindex="-1"><a class="header-anchor" href="#数据提供器"><span>数据提供器</span></a></h2><p>数据提供器是一个实现了 DataProviderInterface 接口的类，主要用于获取分页和数据排序，Yii 包含以下数据提供器：</p><ul><li>ActiveDataProvider：使用 Query 或者 ActiveQuery 从数据库查询数据以数组的方式或者 Active Record 实例的方式返回。</li><li>SqlDataProvider：执行一段 SQL 语句并且将数据库数据作为数组返回。</li><li>ArrayDataProvider：将一个大的数组依据分页和排序规则返回一部分数据。</li></ul><p>这些数据提供者都遵守以下模式：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">根据配置的分页以及排序属性来创建一个数据提供者</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$provider</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">new</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">XyzDataProvider</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">([</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;pagination&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[...],</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;sort&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[...],</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">获取分页和排序数据</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$models</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$provider</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getModels</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">在当前页获取数据项的数目</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$count</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$provider</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getCount</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">获取所有页面的数据项的总数</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$totalCount</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$provider</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getTotalCount</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pagination 和 sort 属性分别对应 <code>yii\\data\\Pagination</code> 和 <code>yii\\data\\Sort</code>，也可以配置成 false 禁用分页和排序。</p><h3 id="activedataprovider" tabindex="-1"><a class="header-anchor" href="#activedataprovider"><span>ActiveDataProvider</span></a></h3><p>为了使用 yii\\data\\ActiveDataProvider，应该配置其 query 的属性。 它既可以是一个 yii\\db\\Query 对象，又可以是一个 yii\\db\\ActiveQuery 对象。假如是前者，返回的数据将是数组； 如果是后者，返回的数据可以是数组也可以是 Active Record 对象。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$query</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">self</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">find</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">where</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$condition</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">orderBy</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">([</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;createdAt&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">-</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pagination</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">new</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Pagination</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pagination</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setPage</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$page</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pagination</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setPageSize</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pageSize</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">new</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">ActiveDataProvider</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">([</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;query&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$query</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;pagination&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pagination</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]))-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getModels</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="arraydataprovider" tabindex="-1"><a class="header-anchor" href="#arraydataprovider"><span>ArrayDataProvider</span></a></h3><p>yii\\data\\ArrayDataProvider 非常适用于大的数组。数据提供者允许返回一个经过一个或者多个字段排序的数组数据页面。为了使用 yii\\data\\ArrayDataProvider，应该指定 allModels 属性作为一个大的数组。 这个大数组的元素既可以是一些关联数组，也可以是一些对象。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$results</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">self</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">findAll</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$condition</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pagination</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">new</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Pagination</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pagination</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setPageSize</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pageSize</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pagination</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setPage</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$page</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$sorter</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">new</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Sort</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">([</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;attributes&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;createdAt&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">],</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;defaultOrder&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;createdAt&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#000000;">SORT_DESC</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">new</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">ArrayDataProvider</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">([</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;allModels&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$results</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;pagination&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$pagination</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;sort&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$sorter</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]))-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getModels</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sqldataprovider" tabindex="-1"><a class="header-anchor" href="#sqldataprovider"><span>SqlDataProvider</span></a></h3><p>TODO:</p>`,15)]))}const r=a(e,[["render",l]]),c=JSON.parse('{"path":"/yii/docs/formatting.html","title":"显示数据","lang":"zh-CN","frontmatter":{"description":"显示数据 数据提供器 数据提供器是一个实现了 DataProviderInterface 接口的类，主要用于获取分页和数据排序，Yii 包含以下数据提供器： ActiveDataProvider：使用 Query 或者 ActiveQuery 从数据库查询数据以数组的方式或者 Active Record 实例的方式返回。 SqlDataProvider...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"显示数据\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T09:09:33.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/yii/docs/formatting.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"显示数据"}],["meta",{"property":"og:description","content":"显示数据 数据提供器 数据提供器是一个实现了 DataProviderInterface 接口的类，主要用于获取分页和数据排序，Yii 包含以下数据提供器： ActiveDataProvider：使用 Query 或者 ActiveQuery 从数据库查询数据以数组的方式或者 Active Record 实例的方式返回。 SqlDataProvider..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T09:09:33.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-21T09:09:33.000Z"}]]},"git":{"createdTime":1695287373000,"updatedTime":1695287373000,"contributors":[{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":1.59,"words":476},"filePathRelative":"yii/docs/formatting.md","excerpt":"\\n<h2>数据提供器</h2>\\n<p>数据提供器是一个实现了 DataProviderInterface 接口的类，主要用于获取分页和数据排序，Yii 包含以下数据提供器：</p>","autoDesc":true}');export{r as comp,c as data};
