import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as t,o as e}from"./app-rQI8KFp-.js";const i="/assets/const-magic-clCDfjmS.png",l={};function p(h,s){return e(),n("div",null,s[0]||(s[0]=[t('<h1 id="常量" tabindex="-1"><a class="header-anchor" href="#常量"><span>常量</span></a></h1><p>常量是一个简单值的标识符（名字）。如同其名称所暗示的，在脚本执行期间该值不能改变（除了所谓的 魔术常量，它们其实不是常量）。常量大小写敏感。传统上常量标识符总是大写的。</p><p><img src="'+i+`" alt="magic const"></p><p>还可以使用 define() 函数来定义包含保留字或非常规名称的常量，这类常量可以通过 constant() 函数来获取名称，但是非常不推荐这种用法。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>在 PHP 8.0.0 之前，使用 define() 定义的常量可能不区分大小写。</p></div><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">合法的常量名</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">define</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;FOO&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;something&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">define</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;FOO2&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;something</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">else&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">define</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;FOO_BAR&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;something</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">more&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">非法的常量名</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">define</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;2FOO&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;something&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">下面的定义是合法的，但应该避免这样做：(自定义常量不要以__开头)</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">也许将来有一天</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">PHP</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">会定义一个</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">__FOO__</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">的魔术常量</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">这样就会与你的代码相冲突</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">define</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;__FOO__&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;something&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常量的范围是全局的。常量可以从脚本的任何地方被访问，而不考虑作用域。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>从 PHP 7.1.0 开始，类常量可以声明为 protected 或 private 的可见性， 使其只在其定义的类的层次范围内可用。</p></div><p>可以使用 const 关键字或 define() 函数两种方法来定义一个常量。函数 define() 允许将常量定义为一个表达式，而 const 关键字有一些限制，具体可参见下述章节。一个常量一旦被定义，就不能再改变或者取消定义。</p><p>使用 const 关键字定义常量时，只能包含标量数据（bool、int、float 、string）。可以将常量定义为一个表达式，也可以定义为一个 array。还可以定义 resource 为常量，但应尽量避免，因为可能会造成不可预料的结果。</p><p>可以简单的通过指定其名字来取得常量的值，与变量不同，不应该在常量前面加上 $ 符号。如果常量名是动态的，也可以用函数 constant() 来获取常量的值。用 get_defined_constants() 可以获得所有已定义的常量列表。如果要检查是否定义了某常量，请使用 defined() 函数。</p><p>常量和变量的区别：</p><ul><li>常量前面没有美元符号（$）。</li><li>常量可以不用理会变量的作用域而在任何地方定义和访问。</li><li>常量一旦定义就不能被重新定义或者取消定义。</li><li>常量只能计算标量值或数组。</li></ul><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">a</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">echo</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">a;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">define</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;b&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">2</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">echo</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">b;</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">var_dump</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">defined</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;b&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>和使用 define() 来定义常量相反的是，使用 const 关键字定义常量必须处于最顶端的作用域，因为用此方法是在编译时定义的。这就意味着不能在函数内，循环内以及 if 或 try/catch 语句之内用 const 来定义常量。</p></div><h2 id="预定义常量" tabindex="-1"><a class="header-anchor" href="#预定义常量"><span>预定义常量</span></a></h2><p><a href="https://www.php.net/manual/zh/reserved.constants.php" target="_blank" rel="noopener noreferrer">预定义常量</a>。</p><h2 id="魔术常量" tabindex="-1"><a class="header-anchor" href="#魔术常量"><span>魔术常量</span></a></h2><p>有九个魔术常量它们的值随着它们在代码中的位置改变而改变。</p><p><img src="`+i+'" alt="magic const"></p>',20)]))}const c=a(l,[["render",p]]),d=JSON.parse('{"path":"/php/docs/const.html","title":"常量","lang":"zh-CN","frontmatter":{"description":"常量 常量是一个简单值的标识符（名字）。如同其名称所暗示的，在脚本执行期间该值不能改变（除了所谓的 魔术常量，它们其实不是常量）。常量大小写敏感。传统上常量标识符总是大写的。 magic const 还可以使用 define() 函数来定义包含保留字或非常规名称的常量，这类常量可以通过 constant() 函数来获取名称，但是非常不推荐这种用法。 注...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常量\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-09-07T03:11:25.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/php/docs/const.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"常量"}],["meta",{"property":"og:description","content":"常量 常量是一个简单值的标识符（名字）。如同其名称所暗示的，在脚本执行期间该值不能改变（除了所谓的 魔术常量，它们其实不是常量）。常量大小写敏感。传统上常量标识符总是大写的。 magic const 还可以使用 define() 函数来定义包含保留字或非常规名称的常量，这类常量可以通过 constant() 函数来获取名称，但是非常不推荐这种用法。 注..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-09-07T03:11:25.000Z"}],["meta",{"property":"article:modified_time","content":"2022-09-07T03:11:25.000Z"}]]},"git":{"createdTime":1662520285000,"updatedTime":1662520285000,"contributors":[{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":2.6,"words":780},"filePathRelative":"php/docs/const.md","excerpt":"\\n<p>常量是一个简单值的标识符（名字）。如同其名称所暗示的，在脚本执行期间该值不能改变（除了所谓的 魔术常量，它们其实不是常量）。常量大小写敏感。传统上常量标识符总是大写的。</p>","autoDesc":true}');export{c as comp,d as data};
