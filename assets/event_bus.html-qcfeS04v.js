import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,o as p}from"./app-rQI8KFp-.js";const e={};function l(h,s){return p(),i("div",null,s[0]||(s[0]=[n(`<h1 id="全局事件总线" tabindex="-1"><a class="header-anchor" href="#全局事件总线"><span>全局事件总线</span></a></h1><p>全局事件总线：</p><p>一种组件间通信方式，适用于<em>任意组件通信</em>.</p><h2 id="设置全局总线" tabindex="-1"><a class="header-anchor" href="#设置全局总线"><span>设置全局总线</span></a></h2><p>main.js 中通过为 Vue 原型对象添加属性实现创建总线，且该总线能够访问所有的 Vue 对象方法:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-js"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">new</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">Vue</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">render</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">h</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">h</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">beforeCreate</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Vue</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">prototype</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$bus</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">},</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}).</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">$mount</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;#app&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用事件总线" tabindex="-1"><a class="header-anchor" href="#使用事件总线"><span>使用事件总线</span></a></h2><h3 id="接收数据" tabindex="-1"><a class="header-anchor" href="#接收数据"><span>接收数据</span></a></h3><p>A 组件要接收数据，A 组件中在总线上创建自定义事件:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-js"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">mounted</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">$bus</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">$on</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;getInfo&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,(</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">student</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">school</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">if</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">school</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">){</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">school</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;name&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">school</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;address&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">school</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">address</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">};</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">if</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">student</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">){</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">student</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;name&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">student</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;age&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">student</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">age</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">};</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">})</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="发送数据" tabindex="-1"><a class="header-anchor" href="#发送数据"><span>发送数据</span></a></h3><p>B 组件要发送数据，B 组件中调用 <code>$emit()</code> 方法调用其他组件创建的自定义事件并传递数据:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-js"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">methods</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">showAll</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(){</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">$bus</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">$emit</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;getInfo&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,{</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;name&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;age&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">age</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">});</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>最好在 <code>beforeDestroy()</code> 中解绑自己创建的事件：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-js"><span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">beforeDestroy</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0000FF;">this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">$bus</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">$off</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;getInfo&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,14)]))}const c=a(e,[["render",l]]),d=JSON.parse('{"path":"/vue/docs/vue2/event_bus.html","title":"全局事件总线","lang":"zh-CN","frontmatter":{"description":"全局事件总线 全局事件总线： 一种组件间通信方式，适用于任意组件通信. 设置全局总线 main.js 中通过为 Vue 原型对象添加属性实现创建总线，且该总线能够访问所有的 Vue 对象方法: 使用事件总线 接收数据 A 组件要接收数据，A 组件中在总线上创建自定义事件: 发送数据 B 组件要发送数据，B 组件中调用 $emit() 方法调用其他组件创...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"全局事件总线\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-01T07:09:10.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/vue/docs/vue2/event_bus.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"全局事件总线"}],["meta",{"property":"og:description","content":"全局事件总线 全局事件总线： 一种组件间通信方式，适用于任意组件通信. 设置全局总线 main.js 中通过为 Vue 原型对象添加属性实现创建总线，且该总线能够访问所有的 Vue 对象方法: 使用事件总线 接收数据 A 组件要接收数据，A 组件中在总线上创建自定义事件: 发送数据 B 组件要发送数据，B 组件中调用 $emit() 方法调用其他组件创..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-01T07:09:10.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-01T07:09:10.000Z"}]]},"git":{"createdTime":1640441337000,"updatedTime":1751353750000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"},{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1},{"name":"koston.zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":0.71,"words":214},"filePathRelative":"vue/docs/vue2/event_bus.md","excerpt":"\\n<p>全局事件总线：</p>\\n<p>一种组件间通信方式，适用于<em>任意组件通信</em>.</p>","autoDesc":true}');export{c as comp,d as data};
