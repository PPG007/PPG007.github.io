import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as r,o}from"./app-rQI8KFp-.js";const a="/assets/components-of-kubernetes-PGxKOYLl.svg",s={};function p(c,e){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="kubernetes-组件" tabindex="-1"><a class="header-anchor" href="#kubernetes-组件"><span>Kubernetes 组件</span></a></h1><p><img src="'+a+'" alt="components-of-kubernetes"></p><p>一个 Kubernetes 集群由一组被称作节点的机器组成。这些节点上运行 Kubernetes 所管理的容器化应用。集群具有至少一个工作节点。</p><p>工作节点托管作为应用负载的组件的 Pod 。控制平面管理集群中的工作节点和 Pod（集群上一组正在运行的容器） 。 为集群提供故障转移和高可用性，这些控制平面一般跨多主机运行，集群跨多个节点运行。</p><h2 id="控制平面组件-control-plane-components" tabindex="-1"><a class="header-anchor" href="#控制平面组件-control-plane-components"><span>控制平面组件（Control Plane Components）</span></a></h2><p>控制平面的组件对集群做出全局决策(比如调度)，以及检测和响应集群事件（例如，当不满足部署的 replicas 字段时，启动新的 pod）。</p><h3 id="api-server" tabindex="-1"><a class="header-anchor" href="#api-server"><span>API server</span></a></h3><p>TODO:</p><h3 id="etcd" tabindex="-1"><a class="header-anchor" href="#etcd"><span>etcd</span></a></h3><p>etcd 是兼具一致性和高可用性的键值数据库，可以作为保存 Kubernetes 所有集群数据的后台数据库。</p><h3 id="scheduler" tabindex="-1"><a class="header-anchor" href="#scheduler"><span>scheduler</span></a></h3><p>负责监视新创建的、未指定运行节点（node）的 Pods，选择节点让 Pod 在上面运行。</p><h3 id="controller-manager" tabindex="-1"><a class="header-anchor" href="#controller-manager"><span>controller-manager</span></a></h3><p>运行控制器进程的控制平面组件。控制器通过 api-server 监控集群的公共状态并致力于将当前状态转为期望状态。</p><p>控制器包括：</p><ul><li>节点控制器（Node Controller）: 负责在节点出现故障时进行通知和响应。</li><li>任务控制器（Job controller）: 监测代表一次性任务的 Job 对象，然后创建 Pods 来运行这些任务直至完成。</li><li>端点控制器（Endpoints Controller）: 填充端点(Endpoints)对象(即加入 Service 与 Pod)。</li><li>服务帐户和令牌控制器（Service Account &amp; Token Controllers）: 为新的命名空间创建默认帐户和 API 访问令牌。</li></ul><h3 id="cloud-controller-manager" tabindex="-1"><a class="header-anchor" href="#cloud-controller-manager"><span>cloud-controller-manager</span></a></h3><p>云控制器管理器是指嵌入特定云的控制逻辑的 控制平面组件。 云控制器管理器使得你可以将你的集群连接到云提供商的 API 之上， 并将与该云平台交互的组件同与你的集群交互的组件分离开来。 cloud-controller-manager 仅运行特定于云平台的控制回路。 如果你在自己的环境中运行 Kubernetes，或者在本地计算机中运行学习环境， 所部署的环境中不需要云控制器管理器。</p><h2 id="node-组件" tabindex="-1"><a class="header-anchor" href="#node-组件"><span>Node 组件</span></a></h2><h3 id="kubelet" tabindex="-1"><a class="header-anchor" href="#kubelet"><span>kubelet</span></a></h3><p>一个在集群中每个节点（node）上运行的代理。 它保证容器（containers）都 运行在 Pod 中。</p><p>kubelet 接收一组通过各类机制提供给它的 PodSpecs，确保这些 PodSpecs 中描述的容器处于运行状态且健康。 kubelet 不会管理不是由 Kubernetes 创建的容器。</p><h3 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy"><span>proxy</span></a></h3><p>kube-proxy 是集群中每个节点上运行的网络代理， 实现 Kubernetes 服务（Service） 概念的一部分。</p><p>kube-proxy 维护节点上的网络规则。这些网络规则允许从集群内部或外部的网络会话与 Pod 进行网络通信。</p><h3 id="runtime" tabindex="-1"><a class="header-anchor" href="#runtime"><span>runtime</span></a></h3><p>容器运行环境是负责运行容器的软件。</p><p>Kubernetes 支持容器运行时，例如 Docker、 containerd、CRI-O 以及 Kubernetes CRI (容器运行环境接口) 的其他任何实现。</p>',28)]))}const l=n(s,[["render",p]]),h=JSON.parse('{"path":"/kubernetes/docs/component.html","title":"Kubernetes 组件","lang":"zh-CN","frontmatter":{"description":"Kubernetes 组件 components-of-kubernetes 一个 Kubernetes 集群由一组被称作节点的机器组成。这些节点上运行 Kubernetes 所管理的容器化应用。集群具有至少一个工作节点。 工作节点托管作为应用负载的组件的 Pod 。控制平面管理集群中的工作节点和 Pod（集群上一组正在运行的容器） 。 为集群提供故障...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kubernetes 组件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-08-15T09:32:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/kubernetes/docs/component.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"Kubernetes 组件"}],["meta",{"property":"og:description","content":"Kubernetes 组件 components-of-kubernetes 一个 Kubernetes 集群由一组被称作节点的机器组成。这些节点上运行 Kubernetes 所管理的容器化应用。集群具有至少一个工作节点。 工作节点托管作为应用负载的组件的 Pod 。控制平面管理集群中的工作节点和 Pod（集群上一组正在运行的容器） 。 为集群提供故障..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-15T09:32:39.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-15T09:32:39.000Z"}]]},"git":{"createdTime":1648826140000,"updatedTime":1660555959000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@qq.com","commits":1,"url":"https://github.com/PPG007"},{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":2.61,"words":784},"filePathRelative":"kubernetes/docs/component.md","excerpt":"\\n<p></p>\\n<p>一个 Kubernetes 集群由一组被称作节点的机器组成。这些节点上运行 Kubernetes 所管理的容器化应用。集群具有至少一个工作节点。</p>","autoDesc":true}');export{l as comp,h as data};
