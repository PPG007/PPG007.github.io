import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as p,o as n}from"./app-rQI8KFp-.js";const l={};function e(h,s){return n(),i("div",null,s[0]||(s[0]=[p(`<h1 id="class-对象" tabindex="-1"><a class="header-anchor" href="#class-对象"><span>Class 对象</span></a></h1><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-java"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">public</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">class</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Test1</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">public</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">static</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#267F99;">void</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">main</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">String</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[]</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">throws</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">ClassNotFoundException</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">一个类在内存中只有一个Class对象</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">一个类被加载后，类的整个结构都会封装在Class对象中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">方式一：通过对象.getClass()获得</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">User</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">user</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">new</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">User</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">?</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">extends</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">User</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">aClass1</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">user</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">aClass1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">hashCode</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">方式二：forName,适用于运行时动态获取Class对象</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">aClass</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">Class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">forName</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;reflection.entity.User&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">aClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">hashCode</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">方式三：通过类名.Class</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">User</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">userClass</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">User</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">userClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">hashCode</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">方式四：基本内置类型的包装类都有一个Type属性</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Integer</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">type</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">Integer</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">TYPE</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">type</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getName</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const c=a(l,[["render",e]]),r=JSON.parse('{"path":"/annotation-and-reflection/docs/class.html","title":"Class 对象","lang":"zh-CN","frontmatter":{"description":"Class 对象","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class 对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-12-28T13:51:24.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/annotation-and-reflection/docs/class.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"Class 对象"}],["meta",{"property":"og:description","content":"Class 对象"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2021-12-28T13:51:24.000Z"}],["meta",{"property":"article:modified_time","content":"2021-12-28T13:51:24.000Z"}]]},"git":{"createdTime":1640699484000,"updatedTime":1640699484000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":0.47,"words":141},"filePathRelative":"annotation-and-reflection/docs/class.md","excerpt":"\\n<div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" style=\\"--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF\\"><pre class=\\"shiki shiki-themes one-dark-pro light-plus vp-code\\"><code class=\\"language-java\\"><span class=\\"line\\"><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">public</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">class</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Test1</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">{</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">public</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">static</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#267F99\\">void</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">main</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">String</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">[]</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit\\">args</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">)</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">throws</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">ClassNotFoundException</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">一个类在内存中只有一个Class对象</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">一个类被加载后，类的整个结构都会封装在Class对象中</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">方式一：通过对象.getClass()获得</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">User</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">user</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">new</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">User</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">();</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">?</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">extends</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">User</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">aClass1</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">user</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">();</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">aClass1</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">hashCode</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">方式二：forName,适用于运行时动态获取Class对象</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">?</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">aClass</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">Class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">forName</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"reflection.entity.User\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">aClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">hashCode</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">方式三：通过类名.Class</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">User</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">userClass</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">User</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">userClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">hashCode</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">方式四：基本内置类型的包装类都有一个Type属性</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Integer</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">type</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">Integer</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">TYPE</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">type</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getName</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,r as data};
