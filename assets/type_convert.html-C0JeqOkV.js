import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as p}from"./app-rQI8KFp-.js";const t={};function h(e,s){return p(),a("div",null,s[0]||(s[0]=[n(`<h1 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换"><span>类型转换</span></a></h1><h2 id="类型断言" tabindex="-1"><a class="header-anchor" href="#类型断言"><span>类型断言</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-go"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">map1</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#000000;">:=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">make</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">map</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#C678DD;--shiki-light:#267F99;">string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">interface</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{},</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">10</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">map1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;cat1&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">cat1</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">cat2</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">isOk</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#000000;">:=</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">map1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;cat1&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">].(</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">*</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">cat</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类型-switch" tabindex="-1"><a class="header-anchor" href="#类型-switch"><span>类型 switch</span></a></h2><p>将一个变量断言成 type 类型，type 类型具体值就是 switch case 的值，如果 x 成功断言成某个 case 就可以执行哪个 case。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-go"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">switch</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">i</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#000000;">:=</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">map1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;cat1&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">].(</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">type</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">case</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#267F99;">int</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">fmt</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">Println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;int&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">case</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">cat</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">fmt</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">Println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;cat&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">i</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">case</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">*</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">cat</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">fmt</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">Println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;*cat&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">i</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const r=i(t,[["render",h]]),d=JSON.parse('{"path":"/go/docs/type_convert.html","title":"类型转换","lang":"zh-CN","frontmatter":{"description":"类型转换 类型断言 类型 switch 将一个变量断言成 type 类型，type 类型具体值就是 switch case 的值，如果 x 成功断言成某个 case 就可以执行哪个 case。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型转换\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-12-26T03:54:34.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/go/docs/type_convert.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"类型转换"}],["meta",{"property":"og:description","content":"类型转换 类型断言 类型 switch 将一个变量断言成 type 类型，type 类型具体值就是 switch case 的值，如果 x 成功断言成某个 case 就可以执行哪个 case。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2021-12-26T03:54:34.000Z"}],["meta",{"property":"article:modified_time","content":"2021-12-26T03:54:34.000Z"}]]},"git":{"createdTime":1640490874000,"updatedTime":1640490874000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":0.3,"words":90},"filePathRelative":"go/docs/type_convert.md","excerpt":"\\n<h2>类型断言</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"go\\" style=\\"--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF\\"><pre class=\\"shiki shiki-themes one-dark-pro light-plus vp-code\\"><code class=\\"language-go\\"><span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">map1</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#000000\\">:=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">make</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">map</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">[</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#267F99\\">string</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">]</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">interface</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">{},</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#D19A66;--shiki-light:#098658\\">10</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">map1</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">[</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"cat1\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">]</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">cat1</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">cat2</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">isOk</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#000000\\">:=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">map1</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">[</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"cat1\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">].(</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#000000\\">*</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">cat</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">)</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,d as data};
