import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as e}from"./app-rQI8KFp-.js";const p={};function l(h,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="起步" tabindex="-1"><a class="header-anchor" href="#起步"><span>起步</span></a></h1><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h2><p>首先安装 Laravel CLI 工具：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">composer</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">global</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">require</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">laravel/installer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建名为 scrm 的项目：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">laravel</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">new</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">scrm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>启动项目：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">cd</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">scrm</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">npm</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">install</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&amp;&amp;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">npm</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">run</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">build</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">composer</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">run</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><p>Laravel 的所有配置文件都保存在 config 目录下。</p><p>使用 artisan 查看配置文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">about</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出的配置分为若干部分，如果只想查看某个部分，例如 Storage，可以使用 <code>--only</code> 参数：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">about</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">--only=storage</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果要特别详细地查看特定配置，使用 <code>config:show</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">config:show</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">storage</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="环境变量配置" tabindex="-1"><a class="header-anchor" href="#环境变量配置"><span>环境变量配置</span></a></h3><p>Laravel 中的环境变量配置在 <code>.env</code> 文件中，项目创建时会生成一个 <code>.env.example</code> 文件，在 Laravel 安装过程中，此文件会被复制为 <code>.env</code> 文件。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>.env</code> 文件中的任何变量都能被外部变量覆盖。</p></div><p>在加载环境变量之前，Laravel 会判断是否已从外部设置了 <code>APP_ENV</code> 变量，或者是否指定了 <code>--env</code> 选项，如果设置了，<code>.env.[变量值]</code> 的文件将被加载（如果此文件存在，否则加载 <code>.env</code> 文件）。</p><p>例如，现在来创建一个 staging 测试环境的配置文件 <code>.env.staging</code>，将 <code>APP_NAME</code> 设置为 <code>Staging</code>，并且关闭 debug，然后使用以下命令启动：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">APP_ENV</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">staging</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">composer</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">run</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">dev</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">#</span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">or</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">serve</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">--env=staging</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在代码中使用 <code>env()</code> 函数读取环境变量时，根据 <code>.env</code> 文件中定义的环境变量，可以读取到不同的值。如果配置的值为 true 或者 false，那么此函数返回一个布尔类型的变量；如果是保持为空，那么此函数返回一个空字符串；如果配置为 null，那么此函数返回 null，考虑如下的配置：</p><div class="language-dotenv line-numbers-mode" data-highlighter="shiki" data-ext="dotenv" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-dotenv"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">BOOL_TEST1</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">true</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">BOOL_TEST2</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">false</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">BOOL_TEST3</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(true)</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">BOOL_TEST4</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(false)</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">STRING_TEST1</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;test&quot;</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">STRING_TEST2</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">null</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">STRING_TEST3</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">STRING_TEST4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着在代码中获取：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">Illuminate\\Log\\</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">log</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;info&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;BOOL_TEST1&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;BOOL_TEST1&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;BOOL_TEST2&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;BOOL_TEST2&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;BOOL_TEST3&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;BOOL_TEST3&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;BOOL_TEST4&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;BOOL_TEST4&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST1&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST1&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST2&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST2&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST3&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST3&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST4&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST4&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST5&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">env</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;STRING_TEST5&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据输出日志可以看到，四个布尔值都能被获取到并解析为布尔类型，STRING_TEST2 和不存在的 STRING_TEST5 被解析为 null，STRING_TEST3 倍解析为空字符串，而 STRING_TEST4 由于没有 <code>=</code> 符号被解析为 null。</p><p>如果要判断当前的环境，除了用 <code>env()</code> 方法读取 APP_ENV 的值，还可以使用 App 类的静态 <code>environment()</code> 方法：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">use</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">Illuminate\\Support\\Facades\\</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$environment</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">environment</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个方法还可以传入参数，用来判断当前环境是否匹配：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$isDev</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">environment</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">([</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;local&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;staging&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$isProduction</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">environment</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;production&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>为了防止环境变量文件被提交到 git 等版本控制工具导致泄露，环境变量配置文件支持加密，具体见<a href="https://laravel.com/docs/12.x/configuration#encrypting-environment-files" target="_blank" rel="noopener noreferrer">这里</a>。但是我个人认为这个功能没什么卵用，一是敏感的环境变量本身就不应该对开发可见，本地测试用的环境变量如 AK、SK 等应该使用专用的、有额外限制的；二是现在基本上都会使用容器化部署，这些敏感的环境变量应该保存在容器配置文件的仓库内，例如直接通过管理 docker 配置文件或者 k8s 的配置文件来实现对敏感环境变量的控制，代码里的 <code>.env</code> 文件仅做占位即可。如果不使用容器化部署那么这个功能可能还有点用，不过不使用容器化的公司通常规模较小，我比较怀疑是否具有这个安全意识（笑）。</p><h3 id="读取、配置非环境变量的配置" tabindex="-1"><a class="header-anchor" href="#读取、配置非环境变量的配置"><span>读取、配置非环境变量的配置</span></a></h3><p>使用 <code>Config</code> 类的静态方法或者全局 <code>config()</code> 方法来获取配置：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">use</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">Illuminate\\Support\\Facades\\</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">Illuminate\\Log\\</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">log</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;info&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;name1&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;app.name&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;name2&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">\\</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;app.name&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;notExists&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">\\</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;app.notExists&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;default</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">value&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置的 key 格式为 <code>\${configFileName}.\${key}...</code>，如果配置文件中要取的 key 是个数组，那么还能继续嵌套向内访问，例如：<code>app.maintenance.driver</code>。</p><p>也可以在运行时设置某个配置：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">set</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;app.notExists&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">\\</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">([</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;app.notExists2&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">666</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">Illuminate\\Log\\</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">log</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;info&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;notExists1&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">\\</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;app.notExists&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;default</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">value&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;notExists2&#39;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">\\</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;app.notExists2&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;default</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">value&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">),</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Config</code> 类还有直接返回具体类型值的方法：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;config-key&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">integer</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;config-key&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">float</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;config-key&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">boolean</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;config-key&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">array</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;config-key&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="缓存配置文件" tabindex="-1"><a class="header-anchor" href="#缓存配置文件"><span>缓存配置文件</span></a></h3><p>为了提升程序的速度，可以将 config 目录下的所有配置文件合成为一个文件，使用 <code>php artisan config:cache</code> 命令可以缓存配置文件，这里可以通过 <code>--env</code> 参数来指定要生成哪个环境的配置缓存，通过 <code>php artisan config:clear</code> 来清除缓存。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>配置被缓存后，.env 文件将不会被加载，<code>env()</code> 函数也将只返回外部注入的环境变量。</p></div><h3 id="发布配置文件" tabindex="-1"><a class="header-anchor" href="#发布配置文件"><span>发布配置文件</span></a></h3><p>默认情况下一些内置的配置文件不会生成到 config 目录中，也就不能被修改，可以通过 <code>config:publish</code> 命令将指定的配置文件生成到 config 目录内，然后可以修改他们：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">config:publish</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">config:publish</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">--all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调试模式与维护模式" tabindex="-1"><a class="header-anchor" href="#调试模式与维护模式"><span>调试模式与维护模式</span></a></h3><p>通过将配置中的 <code>app.debug</code> 设置为 true 可以开启调试模式，默认情况下这个配置收到 APP_DEBUG 变量的影响。</p><p>通过 <code>php artisan down</code> 命令可以开启维护模式，在维护模式中，所有请求将返回 503 错误，并且会显示一个简单的页面，这个页面可以自定义。</p><p>使用 <code>php artisan up</code> 命令可以关闭维护模式。</p><p>维护模式下可以通过设置密钥来允许绕过维护模式，例如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">#</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">生成密钥并进入维护模式</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">down</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">--with-secret</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">#</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">手动指定密钥</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">down</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">--secret=</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;1630542a-246b-4b66-afa1-dd72a4c43515&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置密钥并启动服务后，可以通过放完当前应用的 /{secret} 路径绕过维护模式，例如：<code>http://127.0.0.1:8000/CmR4jXnQr39RKRrU</code></p><p>在集群部署的情况下，如果要将所有的应用都开启维护模式，那么需要在每个实例内都执行上面的命令，或者修改 .env 文件，选择将维护模式的状态保存到所有实例都能访问的地方：</p><div class="language-dotenv line-numbers-mode" data-highlighter="shiki" data-ext="dotenv" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-dotenv"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">APP_MAINTENANCE_DRIVER</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">cache</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">APP_MAINTENANCE_STORE</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">database</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果希望维护模式下将请求重定向到其他页面，可以通过 <code>--redirect</code> 参数设置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-bash"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">php</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">artisan</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">down</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">--redirect=https://baidu.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>可以通过自定义 <code>resources/views/errors/503.blade.php</code> 来自定义维护页面。</p></div><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h2><h3 id="根目录" tabindex="-1"><a class="header-anchor" href="#根目录"><span>根目录</span></a></h3><ul><li><p>app：程序核心代码，绝大多数类都将位于此目录。</p></li><li><p>bootstrap：包含引导框架的 <code>app.php</code>，还包含一个 cache 目录，存放为性能优化生成的文件。</p></li><li><p>config：包含所有的配置文件。</p></li><li><p>database：数据库相关。</p></li><li><p>public：包含 <code>index.php</code>，这是程序的入口。此外还包含一些静态文件。</p></li><li><p>resources：包含视图和原始资源文件。</p></li><li><p>routes：包含路由定义。</p><p>默认只包含 <code>web.php</code> 和 <code>console.php</code>，前者会被放在 web 中间件组中，后者可以用于命令行任务。 使用 <code>install:api</code> 和 <code>install:broadcasting</code> 可以创建 <code>api.php</code> 和 <code>channels.php</code>，前者用于无状态路由，通过 token 验证身份，后者用于注册事件广播。</p></li><li><p>storage：包含编译后的 Blade 视图、应用程序生成的文件、以及文件日志和文件缓存，打印的日志可以在 logs 目录中找到。</p></li><li><p>tests：包含单元测试。</p></li><li><p>vendor：Composer 依赖。</p></li></ul><h3 id="app-目录" tabindex="-1"><a class="header-anchor" href="#app-目录"><span>App 目录</span></a></h3><p>默认情况下，app 目录包含 Http、Models、Providers 三个子目录，分别用于存放 HTTP 相关的类、模型和自定义服务提供者。其他目录都可以通过 artisan 生成，执行 <code>php artisan list make</code> 命令可以查看所有可用的生成命令。</p><ul><li>Broadcasting：包含应用程序的所有广播频道类，使用 <code>make:channel</code> 命令生成。</li><li>Console：包含自定义 Artisan 命令，使用 <code>make:command</code> 生成。</li><li>Events：包含事件类，使用 <code>event:generate</code> 或 <code>make:event</code> 生成。</li><li>Exceptions：包含自定义异常，使用 <code>make:exception</code> 生成。</li><li>Http：包含 controller、middleware等。</li><li>Jobs：包含队列任务，使用 <code>make:job</code> 生成。</li><li>Listeners：包含事件监听器，使用 <code>event:generate</code> 或 <code>make:listener</code> 生成。</li><li>Mail：包含发送邮件类，使用 <code>make:mail</code> 生成。</li><li>Models：包含模型类。</li><li>Notifications：包含通知，使用 <code>make:notification</code> 生成。</li><li>Rules：包含自定义验证规则，使用 <code>make:rule</code> 生成。</li><li>Policies：包含授权策略，使用 <code>make:policy</code> 生成。</li><li>Providers：包含服务提供者。</li></ul>`,64)]))}const d=i(p,[["render",l]]),c=JSON.parse('{"path":"/laravel/docs/start.html","title":"起步","lang":"zh-CN","frontmatter":{"description":"起步 创建项目 首先安装 Laravel CLI 工具： 创建名为 scrm 的项目： 启动项目： 配置 Laravel 的所有配置文件都保存在 config 目录下。 使用 artisan 查看配置文件： 输出的配置分为若干部分，如果只想查看某个部分，例如 Storage，可以使用 --only 参数： 如果要特别详细地查看特定配置，使用 confi...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"起步\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-13T07:32:04.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/laravel/docs/start.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"起步"}],["meta",{"property":"og:description","content":"起步 创建项目 首先安装 Laravel CLI 工具： 创建名为 scrm 的项目： 启动项目： 配置 Laravel 的所有配置文件都保存在 config 目录下。 使用 artisan 查看配置文件： 输出的配置分为若干部分，如果只想查看某个部分，例如 Storage，可以使用 --only 参数： 如果要特别详细地查看特定配置，使用 confi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-13T07:32:04.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-13T07:32:04.000Z"}]]},"git":{"createdTime":1746962370000,"updatedTime":1747121524000,"contributors":[{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":2}]},"readingTime":{"minutes":6.89,"words":2066},"filePathRelative":"laravel/docs/start.md","excerpt":"\\n<h2>创建项目</h2>\\n<p>首先安装 Laravel CLI 工具：</p>","autoDesc":true}');export{d as comp,c as data};
