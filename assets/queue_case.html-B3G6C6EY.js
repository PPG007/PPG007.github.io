import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o}from"./app-rQI8KFp-.js";const r={};function p(c,e){return o(),a("div",null,e[0]||(e[0]=[n('<h1 id="消费者三大消费情况-queue" tabindex="-1"><a class="header-anchor" href="#消费者三大消费情况-queue"><span>消费者三大消费情况(Queue)</span></a></h1><h2 id="先生产-只启动一个消费者" tabindex="-1"><a class="header-anchor" href="#先生产-只启动一个消费者"><span>先生产，只启动一个消费者</span></a></h2><p>毫无疑问，唯一的消费者会接收所有的消息。</p><h2 id="先生产-先启动一个消费者再启动另一个消费者" tabindex="-1"><a class="header-anchor" href="#先生产-先启动一个消费者再启动另一个消费者"><span>先生产，先启动一个消费者再启动另一个消费者</span></a></h2><p>第一个消费者先把消息消耗完毕，第二个消费者什么也没收到。</p><h2 id="先启动两个消费者-再生产" tabindex="-1"><a class="header-anchor" href="#先启动两个消费者-再生产"><span>先启动两个消费者，再生产</span></a></h2><p>两个消费者在生产后都能收到消息，若有 n 条消息，则每个消费者都能收到 n/2 条。</p><p>如果 n 是偶数，先启动的消费者会多一条，如果消费者不下线又来了奇数条消息，则和为偶数，仍然均分。</p>',8)]))}const m=t(r,[["render",p]]),d=JSON.parse('{"path":"/activemq/docs/queue_case.html","title":"消费者三大消费情况(Queue)","lang":"zh-CN","frontmatter":{"description":"消费者三大消费情况(Queue) 先生产，只启动一个消费者 毫无疑问，唯一的消费者会接收所有的消息。 先生产，先启动一个消费者再启动另一个消费者 第一个消费者先把消息消耗完毕，第二个消费者什么也没收到。 先启动两个消费者，再生产 两个消费者在生产后都能收到消息，若有 n 条消息，则每个消费者都能收到 n/2 条。 如果 n 是偶数，先启动的消费者会多一...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"消费者三大消费情况(Queue)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-12-27T03:30:58.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/activemq/docs/queue_case.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"消费者三大消费情况(Queue)"}],["meta",{"property":"og:description","content":"消费者三大消费情况(Queue) 先生产，只启动一个消费者 毫无疑问，唯一的消费者会接收所有的消息。 先生产，先启动一个消费者再启动另一个消费者 第一个消费者先把消息消耗完毕，第二个消费者什么也没收到。 先启动两个消费者，再生产 两个消费者在生产后都能收到消息，若有 n 条消息，则每个消费者都能收到 n/2 条。 如果 n 是偶数，先启动的消费者会多一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2021-12-27T03:30:58.000Z"}],["meta",{"property":"article:modified_time","content":"2021-12-27T03:30:58.000Z"}]]},"git":{"createdTime":1640575858000,"updatedTime":1640575858000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":0.57,"words":171},"filePathRelative":"activemq/docs/queue_case.md","excerpt":"\\n<h2>先生产，只启动一个消费者</h2>\\n<p>毫无疑问，唯一的消费者会接收所有的消息。</p>","autoDesc":true}');export{m as comp,d as data};
