import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as p,o as n}from"./app-rQI8KFp-.js";const h={};function l(e,s){return n(),i("div",null,s[0]||(s[0]=[p(`<h1 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法"><span>基础语法</span></a></h1><h2 id="php-标记" tabindex="-1"><a class="header-anchor" href="#php-标记"><span>PHP 标记</span></a></h2><p>当解析一个文件时，PHP 会寻找起始和结束标记，也就是 <code>&lt;?php</code> 和 <code>?&gt;</code>，这告诉 PHP 开始和停止解析二者之间的代码，此种解析方式使得 PHP 可以被嵌入到各种不同的文档中去，而任何起始和结束标记之外的部分都会被 PHP 解析器忽略。</p><p>PHP 有一个 echo 标记简写 <code>&lt;?=</code> 它是更完整的 <code>&lt;?php echo</code> 的简写形式。</p><p>示例：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">php</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">echo</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;Hello</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">World&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;Hello</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">World&#39;</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">echo</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;this</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">code</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">is</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">within</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">short</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">tags,</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">but</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">will</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">only</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">work</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;if</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">short_open_tag</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">is</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">enabled&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三种情况（短标记），默认是开启的，但是可以通过 php.ini 来禁用，如果 PHP 在被安装时使用了 <code>--disable-short-tags</code> 的配置，该功能则是被默认禁用的</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>因为短标记可以被禁用，所以为了程序兼容性应当使用普通标记。</p></div><p>如果文件内容仅仅包含 PHP 代码，最好在文件末尾删除 PHP 结束标记，这可以避免在 PHP 结束标记之后万一意外加入了空格或者换行符，会导致 PHP 输出这些空白，而脚本中此时并无输出的意图。</p><h2 id="从-html-中分离" tabindex="-1"><a class="header-anchor" href="#从-html-中分离"><span>从 HTML 中分离</span></a></h2><p>凡是在一对开始和结束标记之外的内容都会被 PHP 解析器忽略，这使得 PHP 文件可以具备混合内容。 可以使 PHP 嵌入到 HTML 文档中去。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">p</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">This</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">is</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">going</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">to</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">be</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">ignored</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">by</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">PHP</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">and</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">displayed</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">by</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">the</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">browser</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;/</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">p</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">php</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#795E26;">echo</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;While</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">this</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">is</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">going</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">to</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">be</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">parsed.&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">p</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">This</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">will</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">also</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">be</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">ignored</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">by</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">PHP</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">and</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">displayed</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">by</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">the</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">browser</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;/</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">p</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>处于条件语句中间时，此时 PHP 解释器会根据条件判断来决定哪些输出，哪些跳过。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-php"><span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">php</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">if</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">$expression</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">==</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">:</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">This</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">will</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">show</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">if</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">the</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">expression</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">is</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">php</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">else</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">:</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">Otherwise</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">this</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">will</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">show</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">php</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">endif</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="指令分隔符" tabindex="-1"><a class="header-anchor" href="#指令分隔符"><span>指令分隔符</span></a></h2><p>一段 PHP 代码中的结束标记隐含表示了一个分号；在一个 PHP 代码段中的最后一行可以不用分号结束。如果后面还有新行，则代码段的结束标记包含了行结束。</p>`,16)]))}const c=a(h,[["render",l]]),d=JSON.parse('{"path":"/php/docs/basic.html","title":"基础语法","lang":"zh-CN","frontmatter":{"description":"基础语法 PHP 标记 当解析一个文件时，PHP 会寻找起始和结束标记，也就是 <?php 和 ?>，这告诉 PHP 开始和停止解析二者之间的代码，此种解析方式使得 PHP 可以被嵌入到各种不同的文档中去，而任何起始和结束标记之外的部分都会被 PHP 解析器忽略。 PHP 有一个 echo 标记简写 <?= 它是更完整的 <?php echo 的简写形...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-08-01T13:41:32.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/php/docs/basic.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"基础语法"}],["meta",{"property":"og:description","content":"基础语法 PHP 标记 当解析一个文件时，PHP 会寻找起始和结束标记，也就是 <?php 和 ?>，这告诉 PHP 开始和停止解析二者之间的代码，此种解析方式使得 PHP 可以被嵌入到各种不同的文档中去，而任何起始和结束标记之外的部分都会被 PHP 解析器忽略。 PHP 有一个 echo 标记简写 <?= 它是更完整的 <?php echo 的简写形..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-01T13:41:32.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-01T13:41:32.000Z"}]]},"git":{"createdTime":1659361292000,"updatedTime":1659361292000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@qq.com","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":1.73,"words":520},"filePathRelative":"php/docs/basic.md","excerpt":"\\n<h2>PHP 标记</h2>\\n<p>当解析一个文件时，PHP 会寻找起始和结束标记，也就是 <code>&lt;?php</code> 和 <code>?&gt;</code>，这告诉 PHP 开始和停止解析二者之间的代码，此种解析方式使得 PHP 可以被嵌入到各种不同的文档中去，而任何起始和结束标记之外的部分都会被 PHP 解析器忽略。</p>","autoDesc":true}');export{c as comp,d as data};
