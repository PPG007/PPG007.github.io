import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as e}from"./app-rQI8KFp-.js";const n={};function t(h,i){return e(),a("div",null,i[0]||(i[0]=[l('<h1 id="通用" tabindex="-1"><a class="header-anchor" href="#通用"><span>通用</span></a></h1><h2 id="保持一致" tabindex="-1"><a class="header-anchor" href="#保持一致"><span>保持一致</span></a></h2><p>要收敛，不要发散，混乱的系统是没办法维护的。</p><ul><li>任何地方，新增和修改内容时应该和原风格一致。</li><li>修改前要先熟悉已有风格，遵守规范。</li><li>如果有疑问可与原作沟通，不能自作主张。</li></ul><h2 id="空格" tabindex="-1"><a class="header-anchor" href="#空格"><span>空格</span></a></h2><ul><li><p>多个参数逗号后空格。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-java"><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">print</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;%d&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">123</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>注释标记后空格。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-java"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">sendMail</span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">()</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">发送邮件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>操作符前后空格。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-java"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#267F99;">int</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">5</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">6</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>方法调用的括号前后不空格。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-java"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#267F99;">int</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">Integer</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">parse</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;123&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>缩进使用空格而不是Tab。</p></li><li><p>语言允许的情况下，用两个空格缩进而不是四个。</p></li><li><p>强制类型转换时，右括号与强制转换值之间不需要任何空格。</p></li></ul><h2 id="空行" tabindex="-1"><a class="header-anchor" href="#空行"><span>空行</span></a></h2><ul><li>20 行以内的小方法尽量不要加。</li><li>用空行划分逻辑意味着需要拆分方法，有时候不值得这么做，慎用空行。</li><li>一般一次只空两行。</li></ul><h2 id="列数" tabindex="-1"><a class="header-anchor" href="#列数"><span>列数</span></a></h2><p>所有语言每行不得超过 120 列，一下情况可例外：</p><ul><li>Markdown 中不限制，编辑器应设置自动 wrap。</li><li>注释中引用很长的链接时。</li></ul><h2 id="引号" tabindex="-1"><a class="header-anchor" href="#引号"><span>引号</span></a></h2><p>有的语言声明字符串同时允许单引号、双引号，此时一般优先使用无引号、单引号，必要时再使用双引号。</p><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串"><span>字符串</span></a></h2><p>进行字符串拼接时首选插值语法而不是用运算符连接，提高可读性。</p><h2 id="命名" tabindex="-1"><a class="header-anchor" href="#命名"><span>命名</span></a></h2><h3 id="原则" tabindex="-1"><a class="header-anchor" href="#原则"><span>原则</span></a></h3><ul><li>遵守英语语法，注意单复数、词性、时态，读起来要通顺、自然。</li><li>遵守编程语言惯例。</li><li>How to Name Things： <ul><li>保持一致，不要自己发明。</li><li>名字尽力明确。</li><li>描述要详细，尽管名字可能会很长。</li><li>避免缩写，如果必须要，name应该记下来。</li><li>避免歧义、模糊不清。</li><li>避免魔术值。</li><li>对于布尔值，确定的比不确定的好。</li><li>正确使用单复数。</li><li>正确使用时态。</li><li>正确地拼写。</li><li>使用动词 + 名词来为函数、方法命名。</li><li>使用形容词（可选） + 名词来为类命名。</li><li>不要害怕重命名。</li><li>多花些时间思考。</li></ul></li></ul><h3 id="惯例" tabindex="-1"><a class="header-anchor" href="#惯例"><span>惯例</span></a></h3><ul><li>计数用 count、times，总和用 sum。</li><li>时间用 xxxAt 的形式，表已经发生的用过去式，比如 publishedAt，表将要发生的用现在时，比如 publishAt。</li><li>是否用 isXXX、doesXXX、shouldXXX、canXXX 的形式，尤其注意：不是什么单词前面都可以放 is、are 等系词，名词、形容词才可以。</li></ul><h2 id="排序" tabindex="-1"><a class="header-anchor" href="#排序"><span>排序</span></a></h2><p>在新增代码时，应该遵循下面的原则：</p><ul><li>找出当前文件或相关代码的排序规律，按这个规律把新代码插到合适的位置。</li><li>如果原有代码不够多、没有明显规律，按下面的规律排序： <ul><li>方法排序一般把全部 public 方法排前面，然后是 private 方法。</li><li>把相关的放在一起。</li><li>按界面顺序排序，例如接收表单的字段排序与界面上展示的顺序保持一致。</li><li>按使用顺序排序，先被使用的、使用频率高的排前面，后被使用、使用频率第的排后面。</li><li>按自然顺序排序。</li></ul></li></ul><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h2><ul><li>代码的意图尽量通过编码表达，而不是使用注释。</li><li>代码明确的情况下不要加重复注释。</li><li>一些合理的注释： <ul><li>纲要性注释，简要描述一个文件、一个类。</li><li>复杂业务逻辑、算法。</li><li>代码作用并不直观。</li><li>存在多种可选方案，解释选择这种的原因。</li><li>因为某些现实导致代码不一致、不优雅或存在副作用时，注明原因及后果。</li><li>参考了外部资料，注明链接。</li><li>临时标记注释，例如 TODO。</li></ul></li><li>注释随代码更新，注释里不要包含不必要的细节。</li><li>注释掉的代码属于无用代码，除非有额外注释说明，否则应该在提交前删除。</li></ul><h2 id="日志" tabindex="-1"><a class="header-anchor" href="#日志"><span>日志</span></a></h2><ul><li>不要滥用 error 级别日志。</li><li>message 应为固定字符串，不要在里面拼接变量。</li><li>对于细节、流程日志，要说明影响、逻辑后续的走向。</li><li>对于错误、异常，尽量说出问题的本质。</li><li>不要过度打印日志。</li></ul><h2 id="异常" tabindex="-1"><a class="header-anchor" href="#异常"><span>异常</span></a></h2><ul><li>不要吞掉异常，除非错误可忽略，否则不能只 catch 但是不处理。</li><li>不要过度处理异常，一般使用面向切面的方式。</li><li>保留原始异常（caused by）。</li><li>不使用返回值表示成功和失败，避免要求客户端对返回值进行判断。</li><li>如果要重试，必须加次数限制。</li></ul>',29)]))}const d=s(n,[["render",t]]),c=JSON.parse('{"path":"/codingstyle/docs/start.html","title":"通用","lang":"zh-CN","frontmatter":{"description":"通用 保持一致 要收敛，不要发散，混乱的系统是没办法维护的。 任何地方，新增和修改内容时应该和原风格一致。 修改前要先熟悉已有风格，遵守规范。 如果有疑问可与原作沟通，不能自作主张。 空格 多个参数逗号后空格。 注释标记后空格。 操作符前后空格。 方法调用的括号前后不空格。 缩进使用空格而不是Tab。 语言允许的情况下，用两个空格缩进而不是四个。 强制...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"通用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-13T01:18:18.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/codingstyle/docs/start.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"通用"}],["meta",{"property":"og:description","content":"通用 保持一致 要收敛，不要发散，混乱的系统是没办法维护的。 任何地方，新增和修改内容时应该和原风格一致。 修改前要先熟悉已有风格，遵守规范。 如果有疑问可与原作沟通，不能自作主张。 空格 多个参数逗号后空格。 注释标记后空格。 操作符前后空格。 方法调用的括号前后不空格。 缩进使用空格而不是Tab。 语言允许的情况下，用两个空格缩进而不是四个。 强制..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-13T01:18:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-13T01:18:18.000Z"}]]},"git":{"createdTime":1640575858000,"updatedTime":1747099098000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"},{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":3.83,"words":1148},"filePathRelative":"codingstyle/docs/start.md","excerpt":"\\n<h2>保持一致</h2>\\n<p>要收敛，不要发散，混乱的系统是没办法维护的。</p>","autoDesc":true}');export{d as comp,c as data};
