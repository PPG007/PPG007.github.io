import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,o as p}from"./app-rQI8KFp-.js";const l={};function h(t,s){return p(),i("div",null,s[0]||(s[0]=[n(`<h1 id="反射常用方法" tabindex="-1"><a class="header-anchor" href="#反射常用方法"><span>反射常用方法</span></a></h1><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-java"><span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">含包名</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">testClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getName</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">不含包名</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">testClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getSimpleName</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">获取类修饰符</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">getModifiers返回一个int，使用Modifier类的方法可以进行判断</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">testClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getModifiers</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">Modifier</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">isPublic</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">testClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getModifiers</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">获取包信息</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">testClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getPackage</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">获取父类的class对象</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">testClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getSuperclass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">获取接口信息，不包含父类实现的接口</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">for</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">anInterface</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">:</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">testClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getInterfaces</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">)</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(anInterface);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">获取构造函数,只能获取到public修饰的构造函数。需要捕获NoSuchMethodException异常。</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">for</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Constructor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">constructor</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">:</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">testClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getConstructors</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">)</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(constructor);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">通过无参构造器创建对象，没有无参构造器会报错</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">User</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">user</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">(User)</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">aClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">newInstance</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(user);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">有参构造器创建对象</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Constructor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">?</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">declaredConstructor</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">aClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getDeclaredConstructor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">String</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">int</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Object</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">ppg</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">declaredConstructor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">newInstance</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;ppg&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">123</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(ppg);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">通过反射调用普通方法</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">通过反射获取一个方法</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">如果调用的是static方法，invoke()方法第一个参数就用null代替：</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Method</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">getName</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">aClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getDeclaredMethod</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;getName&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Method</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">getId</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">aClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getMethod</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;getId&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Object</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">invoke</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">getName</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">invoke</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(ppg);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Object</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">invoke1</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">getId</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">invoke</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(ppg);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;ppg==&gt;&quot;</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">invoke</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">invoke1);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">通过反射设置属性</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Field</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">id</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">aClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getDeclaredField</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;id&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">设置允许修改private属性</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">id</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setAccessible</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">对象名，值</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">id</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">set</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(ppg,</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;ppg==&gt;&quot;</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">ppg);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">泛型</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">public</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#267F99;">void</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">fx</span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Map</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">String</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">String</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">map</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">List</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">Boolean</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">booleans)</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;success&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">}</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Fx</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">fxClass</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">Fx</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Method</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">fx</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">fxClass</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getMethod</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;fx&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">Map</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">List</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">class</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">获得泛型的参数类型</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Type</span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">[]</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">genericParameterTypes</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">fx</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getGenericParameterTypes</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">for</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Type</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">genericParameterType</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">:</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">genericParameterTypes)</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&quot;泛型的参数类型：&quot;</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">genericParameterType);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//泛型的参数类型是否等于参数化类型</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">if</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">(genericParameterType</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">instanceof</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">ParameterizedType){</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//getActualTypeArguments获得真实的参数类型信息</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Type</span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">[]</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">actualTypeArguments</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">((ParameterizedType)</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">genericParameterType)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getActualTypeArguments</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">for</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Type</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">actualTypeArgument</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">:</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">actualTypeArguments)</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">System</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">out</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">println</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(actualTypeArgument);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">}</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const c=a(l,[["render",h]]),r=JSON.parse('{"path":"/annotation-and-reflection/docs/reflection_method.html","title":"反射常用方法","lang":"zh-CN","frontmatter":{"description":"反射常用方法","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反射常用方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-12-28T13:51:24.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/annotation-and-reflection/docs/reflection_method.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"反射常用方法"}],["meta",{"property":"og:description","content":"反射常用方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2021-12-28T13:51:24.000Z"}],["meta",{"property":"article:modified_time","content":"2021-12-28T13:51:24.000Z"}]]},"git":{"createdTime":1640699484000,"updatedTime":1640699484000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":1.24,"words":373},"filePathRelative":"annotation-and-reflection/docs/reflection_method.md","excerpt":"\\n<div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" style=\\"--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF\\"><pre class=\\"shiki shiki-themes one-dark-pro light-plus vp-code\\"><code class=\\"language-java\\"><span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">含包名</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">testClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getName</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">不含包名</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">testClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getSimpleName</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">获取类修饰符</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">getModifiers返回一个int，使用Modifier类的方法可以进行判断</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">testClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getModifiers</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">Modifier</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">isPublic</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">testClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getModifiers</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">()));</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">获取包信息</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">testClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getPackage</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">获取父类的class对象</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">testClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getSuperclass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">());</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">获取接口信息，不包含父类实现的接口</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">for</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">?</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">anInterface</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">testClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getInterfaces</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">()</span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">)</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">{</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(anInterface);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">获取构造函数,只能获取到public修饰的构造函数。需要捕获NoSuchMethodException异常。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">for</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Constructor</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">?</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">constructor</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">testClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getConstructors</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">()</span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">)</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">{</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(constructor);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">通过无参构造器创建对象，没有无参构造器会报错</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">User</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">user</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">(User)</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">aClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">newInstance</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(user);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">有参构造器创建对象</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Constructor</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">?</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">declaredConstructor</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">aClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getDeclaredConstructor</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">String</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">int</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Object</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">ppg</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">declaredConstructor</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">newInstance</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"ppg\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#D19A66;--shiki-light:#098658\\">123</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(ppg);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">通过反射调用普通方法</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">通过反射获取一个方法</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">如果调用的是static方法，invoke()方法第一个参数就用null代替：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Method</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">getName</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">aClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getDeclaredMethod</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"getName\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Method</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">getId</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">aClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getMethod</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"getId\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Object</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">invoke</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">getName</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">invoke</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(ppg);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Object</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">invoke1</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">getId</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">invoke</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(ppg);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"ppg==&gt;\\"</span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">+</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">invoke</span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">+</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">invoke1);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">通过反射设置属性</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Field</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">id</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">aClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getDeclaredField</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"id\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">设置允许修改private属性</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">id</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">setAccessible</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#D19A66;--shiki-light:#0000FF\\">true</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">对象名，值</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">id</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">set</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(ppg,</span><span style=\\"--shiki-dark:#D19A66;--shiki-light:#098658\\">1</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"ppg==&gt;\\"</span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">+</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">ppg);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">泛型</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">public</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#267F99\\">void</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">fx</span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Map</span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">String</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">String</span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">map</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">List</span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">Boolean</span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">booleans)</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">{</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"success\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&lt;</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Fx</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">&gt;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">fxClass</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">Fx</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Method</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">fx</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">fxClass</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getMethod</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"fx\\"</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">Map</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">List</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">class</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">获得泛型的参数类型</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Type</span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">[]</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">genericParameterTypes</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">fx</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getGenericParameterTypes</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">for</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Type</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">genericParameterType</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">genericParameterTypes)</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">{</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#98C379;--shiki-light:#A31515\\">\\"泛型的参数类型：\\"</span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">+</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">genericParameterType);</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//泛型的参数类型是否等于参数化类型</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">if</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">(genericParameterType</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">instanceof</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">ParameterizedType){</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//getActualTypeArguments获得真实的参数类型信息</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Type</span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">[]</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">actualTypeArguments</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">((ParameterizedType)</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">genericParameterType)</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">getActualTypeArguments</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">();</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">for</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">(</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#267F99\\">Type</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">actualTypeArgument</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#C678DD;--shiki-light:#AF00DB\\">:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">actualTypeArguments)</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">{</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">System</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#E5C07B;--shiki-light:#001080\\">out</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">.</span><span style=\\"--shiki-dark:#61AFEF;--shiki-light:#795E26\\">println</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">(actualTypeArgument);</span></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#000000\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,r as data};
