import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as t,b as o,o as a}from"./app-rQI8KFp-.js";const p={};function i(c,e){return a(),r("div",null,e[0]||(e[0]=[t("h1",{id:"其他",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#其他"},[t("span",null,"其他")])],-1),t("p",null,"不要信任客户端的 ID 或者其他信息，这些信息应该由服务端从 token 中提取出来。",-1),t("p",null,[o("请求和响应都应该设置 Content-Type 为 "),t("code",null,"application/json"),o("。")],-1),t("p",null,"如果要在请求和响应中包含时间，应该使用 ISO 8601 或者 RFC 3339 标准。",-1),t("p",null,"DELETE 请求也要满足幂等性。",-1)]))}const m=n(p,[["render",i]]),d=JSON.parse('{"path":"/restful/docs/others.html","title":"其他","lang":"zh-CN","frontmatter":{"description":"其他 不要信任客户端的 ID 或者其他信息，这些信息应该由服务端从 token 中提取出来。 请求和响应都应该设置 Content-Type 为 application/json。 如果要在请求和响应中包含时间，应该使用 ISO 8601 或者 RFC 3339 标准。 DELETE 请求也要满足幂等性。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"其他\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-12-27T03:30:58.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/restful/docs/others.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"其他"}],["meta",{"property":"og:description","content":"其他 不要信任客户端的 ID 或者其他信息，这些信息应该由服务端从 token 中提取出来。 请求和响应都应该设置 Content-Type 为 application/json。 如果要在请求和响应中包含时间，应该使用 ISO 8601 或者 RFC 3339 标准。 DELETE 请求也要满足幂等性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2021-12-27T03:30:58.000Z"}],["meta",{"property":"article:modified_time","content":"2021-12-27T03:30:58.000Z"}]]},"git":{"createdTime":1640575858000,"updatedTime":1640575858000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":0.28,"words":84},"filePathRelative":"restful/docs/others.md","excerpt":"\\n<p>不要信任客户端的 ID 或者其他信息，这些信息应该由服务端从 token 中提取出来。</p>","autoDesc":true}');export{m as comp,d as data};
