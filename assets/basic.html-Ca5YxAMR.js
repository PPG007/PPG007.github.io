import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as o,o as s}from"./app-rQI8KFp-.js";const a="/assets/serviceMesh-BUlxLd9D.jpg",l={};function r(n,i){return s(),e("div",null,i[0]||(i[0]=[o('<h1 id="istio-是什么" tabindex="-1"><a class="header-anchor" href="#istio-是什么"><span>Istio 是什么</span></a></h1><p>Istio 是一个完全开源的服务网格，作为透明的一层接入到现有的分布式应用程序里。它也是一个平台，拥有可以集成任何日志、遥测和策略系统的 API 接口。</p><h2 id="服务网格" tabindex="-1"><a class="header-anchor" href="#服务网格"><span>服务网格</span></a></h2><p>服务网格是用于处理服务间通信的专用基础设施层。它负责通过包含现代云原生应用程序的复杂服务拓扑来可靠地传递请求。实际上，服务网格通常通过一组轻量级网络代理来实现，这些代理与应用程序代码一起部署，而不需要感知应用程序本身</p><p>服务网格有如下几个特点：</p><ul><li>应用程序间通讯的中间层。</li><li>轻量级网络代理。</li><li>应用程序无感知。</li><li>解耦应用程序的重试/超时、监控、追踪和服务发现。</li></ul><p>服务网格的来龙去脉：</p><ul><li>最原始的主机之间直接使用网线相连。</li><li>网络层的出现。</li><li>集成到程序内部的控制流。</li><li>分解到程序外部的控制流。</li><li>应用程序中集成服务发现和断路器。</li><li>出现了专门用于服务发现和断路器的软件包、库。</li><li>出现了专门用于服务发现和断路器的开源软件。</li><li>最为微服务的中间层的服务网格出现。</li></ul><p>服务网格架构图：</p><p><img src="'+a+'" alt="服务网格架构图"></p><p>服务网格作为 sidecar 运行，对应用程序来说是透明，所有应用程序间的流量都会通过它，所以对应用程序流量的控制都可以在 serivce mesh 中实现。</p><h2 id="服务网格如何工作-以-istio-为例" tabindex="-1"><a class="header-anchor" href="#服务网格如何工作-以-istio-为例"><span>服务网格如何工作（以 Istio 为例）</span></a></h2><ul><li>Istio 将服务请求路由到目的地址，根据中的参数判断是到生产环境、测试环境还是 staging 环境中的服务（服务可能同时部署在这三个环境中），是路由到本地环境还是公有云环境？所有的这些路由信息可以动态配置，可以是全局配置也可以为某些服务单独配置。</li><li>当 Istio 确认了目的地址后，将流量发送到相应服务发现端点，在 Kubernetes 中是 service，然后 service 会将服务转发给后端的实例。</li><li>Istio 根据它观测到最近请求的延迟时间，选择出所有应用程序的实例中响应最快的实例。</li><li>Istio 将请求发送给该实例，同时记录响应类型和延迟数据。</li><li>如果该实例挂了、不响应了或者进程不工作了，Istio 将把请求发送到其他实例上重试。</li><li>如果该实例持续返回 error，Istio 会将该实例从负载均衡池中移除，稍后再周期性得重试。</li><li>如果请求的截止时间已过，Istio 主动失败该请求，而不是再次尝试添加负载。</li><li>Istio 以 metric 和分布式追踪的形式捕获上述行为的各个方面，这些追踪信息将发送到集中 metric 系统。</li></ul>',13)]))}const m=t(l,[["render",r]]),d=JSON.parse('{"path":"/istio/docs/basic.html","title":"Istio 是什么","lang":"zh-CN","frontmatter":{"prev":{"text":"首页","link":"/istio"},"description":"Istio 是什么 Istio 是一个完全开源的服务网格，作为透明的一层接入到现有的分布式应用程序里。它也是一个平台，拥有可以集成任何日志、遥测和策略系统的 API 接口。 服务网格 服务网格是用于处理服务间通信的专用基础设施层。它负责通过包含现代云原生应用程序的复杂服务拓扑来可靠地传递请求。实际上，服务网格通常通过一组轻量级网络代理来实现，这些代理与...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Istio 是什么\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-08-15T09:32:39.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/istio/docs/basic.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"Istio 是什么"}],["meta",{"property":"og:description","content":"Istio 是什么 Istio 是一个完全开源的服务网格，作为透明的一层接入到现有的分布式应用程序里。它也是一个平台，拥有可以集成任何日志、遥测和策略系统的 API 接口。 服务网格 服务网格是用于处理服务间通信的专用基础设施层。它负责通过包含现代云原生应用程序的复杂服务拓扑来可靠地传递请求。实际上，服务网格通常通过一组轻量级网络代理来实现，这些代理与..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-15T09:32:39.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-15T09:32:39.000Z"}]]},"git":{"createdTime":1649854437000,"updatedTime":1660555959000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@qq.com","commits":1,"url":"https://github.com/PPG007"},{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":2.62,"words":785},"filePathRelative":"istio/docs/basic.md","excerpt":"\\n<p>Istio 是一个完全开源的服务网格，作为透明的一层接入到现有的分布式应用程序里。它也是一个平台，拥有可以集成任何日志、遥测和策略系统的 API 接口。</p>","autoDesc":true}');export{m as comp,d as data};
