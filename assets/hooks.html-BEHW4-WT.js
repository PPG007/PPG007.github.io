import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,o as p}from"./app-rQI8KFp-.js";const l={};function e(h,s){return p(),i("div",null,s[0]||(s[0]=[n(`<h1 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks"><span>Hooks</span></a></h1><h2 id="自定义-hook" tabindex="-1"><a class="header-anchor" href="#自定义-hook"><span>自定义 Hook</span></a></h2><p>之前的 useState、useReduce 等以 use 开头的方法都是 React Hook，React Hook 能够提取重复逻辑降低耦合度，但是很多情况下 React 内置的 Hooks 无法满足需求，这时就可以自定义 Hook。</p><p>要自定义 Hook 就要遵循 Hook 的命名公约：Hook 的名称必须以 use 开头，然后紧跟一个大写字母，就像 useState 这样，Hook 可以返回任意值。</p><h3 id="抽取自定义-hook" tabindex="-1"><a class="header-anchor" href="#抽取自定义-hook"><span>抽取自定义 Hook</span></a></h3><p>现在有两个组件 Foo 和 Bar，当前登录用户信息保存在 localStorage 中，如果希望在两个组件都能获取到用户信息，那么可以将从 localStorage 中读取的逻辑抽取为一个 Hook。</p><div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-tsx"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">export</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">interface</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">user</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">id</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useCurrentUser</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">str</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">localStorage</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getItem</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;user&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">if</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">str</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">JSON</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">parse</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">str</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">as</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">user</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#0000FF;">null</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">export</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">default</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">useCurrentUser</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在组件中引用：</p><div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-tsx"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">Foo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">FC</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">user</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useCurrentUser</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">p</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">user</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">?</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">(</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">span</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">user</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">id</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">-</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">user</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">name</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">span</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">)</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#000000;">:</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">(</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;null&#39;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">p</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Hook 共享的只是状态逻辑而不是状态本身，对 Hook 的每个调用完全独立。</p></div><h3 id="自定义-hook-的注意点" tabindex="-1"><a class="header-anchor" href="#自定义-hook-的注意点"><span>自定义 Hook 的注意点</span></a></h3><ul><li>可以将响应值从一个 Hook 传递到另一个 Hook，并且它们会保持最新。</li><li>每次组件重新渲染时，所有的 Hook 会重新运行。</li><li>自定义 Hook 应该是具体的、高级定制的，保持纯粹。</li></ul><h2 id="一些-react-内置的-hook" tabindex="-1"><a class="header-anchor" href="#一些-react-内置的-hook"><span>一些 React 内置的 Hook</span></a></h2><h3 id="useid" tabindex="-1"><a class="header-anchor" href="#useid"><span>useId</span></a></h3><p>这个 Hook 会返回一个唯一的字符串 id：</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-ts"><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">console</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">log</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useId</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(),</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useId</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(),</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useId</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">());</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果一个页面中有多个 React 实例，那么可以在 createRoot 方法中传入 identifierPrefix 来为这个 React 应用的 useId 的结果设置前缀：</p><div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-tsx"><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">ReactDOM</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">createRoot</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">document</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">getElementById</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;root&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">!</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">identifierPrefix</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;PPG007&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}).</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">render</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">React.StrictMode</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">App</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">React.StrictMode</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usememo" tabindex="-1"><a class="header-anchor" href="#usememo"><span>useMemo</span></a></h3><p>这个 Hook 接收两个参数，第一个参数应该是一个没有任何参数的纯函数，并且可以返回任意类型，第二个参数是依赖项数组。React 会在首次渲染时调用这个函数，在之后的渲染中，如果依赖项数组没有发生变化，那么 React 将直接返回相同的值，否则会再次调用这个函数并缓存。</p><div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-tsx"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">memoTest</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">console</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">log</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;memo</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">function</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">a</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">setA</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useState</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">0</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">b</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">setB</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useState</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">0</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useMemo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">memoTest</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">b</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">span</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">span</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#E50000;--shiki-light-font-style:inherit;">onClick</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setA</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">}</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">add</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">br</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">span</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">b</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">span</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#E50000;--shiki-light-font-style:inherit;">onClick</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setB</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">b</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">}</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">add</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在有这样一个组件，接收一个整数数组并渲染出来，但是很慢：</p><div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-tsx"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">Count</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">FC</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;{</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">count</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">:</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Array</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">number</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}&gt;</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">({</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#001080;--shiki-light-font-style:inherit;">count</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">})</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">console</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">log</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;rendering</span><span class="space"> </span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">count&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">start</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">performance</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">now</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">();</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">while</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#001080;">performance</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">now</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">-</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">start</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">&lt;</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1000</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">continue</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">span</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">count</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">[</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">0</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">]</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">span</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">};</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">App.tsx</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">function</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">a</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">setA</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useState</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">0</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Count</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#E50000;--shiki-light-font-style:inherit;">count</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">[</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">]</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#E50000;--shiki-light-font-style:inherit;">onClick</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setA</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">}</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">add</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的例子中，通过改变 state 可以实现重新渲染，向 Count 组件传入的内容始终相同，但是由于 Object.is 比较数组和对象时比较的是引用地址，因此每次相当于传入一个新数组，这会导致 Count 组件的重新渲染。你可能会想到 React 提供的 <code>memo()</code> 方法，此方法接收两个参数，第一个参数是一个组件，第二个参数是一个函数，是可选的，这个函数接收两个参数，prevProps 与 newProps，这个函数应当返回布尔值，当返回为 true 时 memo 中的组件不会重新渲染，这相当于是缓存。但是对于上面的例子来说，使用 <code>memo()</code> 方法并不会有效，原因就是每次传入的数组都是不一样的，这时，可以使用 <code>useMemo</code> 将传入的 props 的计算过程包裹起来，缓存这个过程。</p><div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-tsx"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">function</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">a</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">setA</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useState</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">0</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">b</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">setB</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useState</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">0</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">count</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">useMemo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">];</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">},</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">[</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">]);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Count</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#E50000;--shiki-light-font-style:inherit;">count</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">count</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#E50000;--shiki-light-font-style:inherit;">onClick</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setA</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">}</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">add</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Count</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#E50000;--shiki-light-font-style:inherit;">count</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">count</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#E50000;--shiki-light-font-style:inherit;">onClick</span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">{</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">setB</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">b</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">+</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000FF;">}</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">add</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时，count 仅依赖 a，点击 b 不会触发 Count 组件的重新渲染。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>组件渲染时，函数内的所有内容都会被执行，如果组件内有一个局部定义的数组或者对象，那么每次重新渲染得到的变量必然和上一次的不同，useMemo 会有无效问题，因此不应该缓存这个变量本身而是缓存这个变量的计算逻辑。</p></div><h3 id="usecallback" tabindex="-1"><a class="header-anchor" href="#usecallback"><span>useCallback</span></a></h3><p>useCallback 也算是 useMemo，只不过缓存的是函数，如果要用 useMemo 缓存函数，那么 useMemo 的第一个参数必须也返回一个函数，useCallback 封装了这一步。</p><h2 id="一些-react-api" tabindex="-1"><a class="header-anchor" href="#一些-react-api"><span>一些 React API</span></a></h2><h3 id="lazy" tabindex="-1"><a class="header-anchor" href="#lazy"><span>lazy</span></a></h3><p>此方法能够延迟加载组件，例如：</p><div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-tsx"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">Foo</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">lazy</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#0000FF;">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;./components/Foo&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">function</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">App</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">div</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#267F99;">Foo</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&lt;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#800000;">div</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#800000;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此方法接收 import 的结果必须是默认导出，如果是非默认导出可以用下面的方法：</p><div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code class="language-tsx"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">Foo</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#795E26;">lazy</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">async</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">()</span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">=&gt;</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">const</span><span class="space"> </span><span style="--shiki-dark:#E5C07B;--shiki-light:#0070C1;">foo</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">await</span><span class="space"> </span><span style="--shiki-dark:#61AFEF;--shiki-light:#0000FF;">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#A31515;">&#39;./components&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">)).</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">Foo</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-dark:#C678DD;--shiki-light:#AF00DB;">return</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">foo</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">};</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35)]))}const t=a(l,[["render",e]]),d=JSON.parse('{"path":"/react/docs/hooks.html","title":"Hooks","lang":"zh-CN","frontmatter":{"description":"Hooks 自定义 Hook 之前的 useState、useReduce 等以 use 开头的方法都是 React Hook，React Hook 能够提取重复逻辑降低耦合度，但是很多情况下 React 内置的 Hooks 无法满足需求，这时就可以自定义 Hook。 要自定义 Hook 就要遵循 Hook 的命名公约：Hook 的名称必须以 use ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hooks\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-13T01:18:18.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/react/docs/hooks.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"Hooks"}],["meta",{"property":"og:description","content":"Hooks 自定义 Hook 之前的 useState、useReduce 等以 use 开头的方法都是 React Hook，React Hook 能够提取重复逻辑降低耦合度，但是很多情况下 React 内置的 Hooks 无法满足需求，这时就可以自定义 Hook。 要自定义 Hook 就要遵循 Hook 的命名公约：Hook 的名称必须以 use ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-13T01:18:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-13T01:18:18.000Z"}]]},"git":{"createdTime":1698054080000,"updatedTime":1747099098000,"contributors":[{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":3}]},"readingTime":{"minutes":3.86,"words":1159},"filePathRelative":"react/docs/hooks.md","excerpt":"\\n<h2>自定义 Hook</h2>\\n<p>之前的 useState、useReduce 等以 use 开头的方法都是 React Hook，React Hook 能够提取重复逻辑降低耦合度，但是很多情况下 React 内置的 Hooks 无法满足需求，这时就可以自定义 Hook。</p>","autoDesc":true}');export{t as comp,d as data};
