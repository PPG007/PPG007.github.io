import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as t,o as a}from"./app-rQI8KFp-.js";const o={};function n(r,e){return a(),i("div",null,e[0]||(e[0]=[t('<h1 id="flex-布局" tabindex="-1"><a class="header-anchor" href="#flex-布局"><span>Flex 布局</span></a></h1><p>指定某个容器为 Flex 布局，<code>display: flex;</code>，行内元素也可以使用 Flex 布局：<code>display: inline-flex</code>，Webkit 内核的浏览器需要在 flex 前面添加 <code>-webkit</code> 前缀。</p><p>设置为 Flex 布局以后，子元素的浮动、清除浮动、垂直居中属性会失效。</p><h2 id="容器的属性" tabindex="-1"><a class="header-anchor" href="#容器的属性"><span>容器的属性</span></a></h2><ul><li>flex-direction 属性：决定主轴的方向，即项目排列的方向。 <ul><li>row：默认值，主轴为水平方向，起点在左端。</li><li>row-reverse：主轴为水平方向，起点在右端。</li><li>column：主轴为垂直方向，起点在上面。</li><li>column-reverse：主轴为垂直方向，起点在下面。</li></ul></li><li>flex-wrap 属性：如果一条轴线排不下，如何换行。 <ul><li>nowrap：默认不换行。</li><li>wrap：换行，第一行在上方。</li><li>wrap-reverse：换行，第一行在下方。</li></ul></li><li>justify-content 属性：定义项目在主轴上的对齐方式。 <ul><li>center：整体居中。</li><li>flex-start：整体靠主轴起点。</li><li>flex-end：整体靠主轴终点。</li><li>space-between：两端对齐，项目之间的间隔都相等。</li><li>space-around：每个项目两侧的间隔相等，项目之间的间隔比项目和边框的间隔大一倍。</li></ul></li><li>align-items 属性：定义项目在交叉轴上如何对齐。 <ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：交叉轴的终点对齐。</li><li>center：居中。</li><li>baseline：项目的第一行文字的基线对齐。</li><li>stretch：默认值，如果项目未设置高度或设为 auto，将占满整个容器的高度。</li></ul></li><li>align-content 属性：定义多根轴线的对齐方式，如果项目只有一根轴线，该属性不起作用： <ul><li>flex-start：与交叉轴起点对齐。</li><li>flex-end：与交叉轴的终点对齐。</li><li>center：与交叉轴的中点对齐。</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li>space-around：每根轴线两侧的间隔都相等，轴线之间的间隔比轴线与边框间隔大一倍。</li><li>stretch：默认值，轴线占满整个交叉轴。</li></ul></li></ul><h2 id="项目的属性" tabindex="-1"><a class="header-anchor" href="#项目的属性"><span>项目的属性</span></a></h2><ul><li>order 属性：定义项目的排列顺序，数值越小排列越靠前。</li><li>flex-grow 属性：定义项目的放大比例，默认为 0，即如果存在剩余空间也不放大。</li><li>flex-shrink 属性：定义了项目的缩小比例，默认为 1。</li><li>flex-basis 属性：定义了分配多余空间之前，项目占据的主轴空间，默认为 auto，也就是项目本来的大小。</li><li>align-self 属性：允许单个项目与其他项目对齐方式不同，覆盖 align-items 属性，默认值 auto，表示继承父元素的 align-items 属性，如果没有父元素，等同于 stretch。</li></ul>',7)]))}const p=l(o,[["render",n]]),d=JSON.parse('{"path":"/css/docs/flex.html","title":"Flex 布局","lang":"zh-CN","frontmatter":{"description":"Flex 布局 指定某个容器为 Flex 布局，display: flex;，行内元素也可以使用 Flex 布局：display: inline-flex，Webkit 内核的浏览器需要在 flex 前面添加 -webkit 前缀。 设置为 Flex 布局以后，子元素的浮动、清除浮动、垂直居中属性会失效。 容器的属性 flex-direction 属性...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flex 布局\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-13T01:18:18.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/css/docs/flex.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"Flex 布局"}],["meta",{"property":"og:description","content":"Flex 布局 指定某个容器为 Flex 布局，display: flex;，行内元素也可以使用 Flex 布局：display: inline-flex，Webkit 内核的浏览器需要在 flex 前面添加 -webkit 前缀。 设置为 Flex 布局以后，子元素的浮动、清除浮动、垂直居中属性会失效。 容器的属性 flex-direction 属性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-13T01:18:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-13T01:18:18.000Z"}]]},"git":{"createdTime":1640441337000,"updatedTime":1747099098000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"},{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":2.21,"words":662},"filePathRelative":"css/docs/flex.md","excerpt":"\\n<p>指定某个容器为 Flex 布局，<code>display: flex;</code>，行内元素也可以使用 Flex 布局：<code>display: inline-flex</code>，Webkit 内核的浏览器需要在 flex 前面添加 <code>-webkit</code> 前缀。</p>","autoDesc":true}');export{p as comp,d as data};
