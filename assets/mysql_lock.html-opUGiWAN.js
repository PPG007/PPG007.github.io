import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o}from"./app-rQI8KFp-.js";const i={};function p(n,e){return o(),a("div",null,e[0]||(e[0]=[l('<h1 id="mysql-锁的分类" tabindex="-1"><a class="header-anchor" href="#mysql-锁的分类"><span>MySQL 锁的分类</span></a></h1><h2 id="基于属性分类" tabindex="-1"><a class="header-anchor" href="#基于属性分类"><span>基于属性分类</span></a></h2><ul><li>共享锁：</li></ul><p>共享锁又称为读锁，简称 S 锁，当一个事务为数据加上读锁以后，其他事务只能对该数据加读锁，而不能对数据加写锁，直到所有的读锁释放之后其他事务才能进行加写锁，读取数据时不允许修改防止重复读。</p><ul><li>排它锁：</li></ul><p>又称写锁，简称 X 锁，当一个事务为数据加上写锁时，其它请求不能再为数据加任何锁，避免了出现脏数据和脏读的问题。</p><h2 id="基于粒度分类" tabindex="-1"><a class="header-anchor" href="#基于粒度分类"><span>基于粒度分类</span></a></h2><ul><li>行级锁：</li></ul><p>上锁的时候锁定的是表的某一行或多行，其他事务访问时，只有这些行才不能访问。</p><ul><li>表级锁：</li></ul><p>表锁是指上锁时锁定的对象是整个表，当下一个事务访问该表的时候，必须等待前一个事务释放锁才能进行访问。</p><ul><li>页级锁：</li></ul><p>粒度介于行级锁和表级锁之间，一次锁定相邻的一组记录，会出现死锁。</p><ul><li>记录锁。</li><li>间隙锁</li></ul><p>属于行锁的一种，锁住的是表记录的某一段区间，边界遵循左开右闭，只会出现在重复读的事务级别中，防止幻读问题。</p><ul><li>临建锁：</li></ul><p>是行锁的一种，是 INNODB 的行锁默认算法，是间隙锁和记录锁的组合，临建锁会把查询出来的记录锁住，同时把查询范围内的所有间隙控件锁住，把相邻的下一个区间也锁住；触发条件：<em>范围查询并命中，查询命中了索引</em>，避免了脏读、重复读、幻读问题。</p><h2 id="基于状态分类" tabindex="-1"><a class="header-anchor" href="#基于状态分类"><span>基于状态分类</span></a></h2><p>意向锁：让其他事务知道表中已经加锁。</p><ul><li><p>意向共享锁：</p><p>当一个事务试图对整个表进行加共享锁之前，首先需要获得这个表的意向共享锁。</p></li><li><p>意向排它锁：</p><p>当一个事务试图对整个表加排它锁之前，首先需要获得这个表的意向排它锁。</p></li></ul>',20)]))}const c=t(i,[["render",p]]),m=JSON.parse('{"path":"/javaknowledge/docs/mysql_lock.html","title":"MySQL 锁的分类","lang":"zh-CN","frontmatter":{"description":"MySQL 锁的分类 基于属性分类 共享锁： 共享锁又称为读锁，简称 S 锁，当一个事务为数据加上读锁以后，其他事务只能对该数据加读锁，而不能对数据加写锁，直到所有的读锁释放之后其他事务才能进行加写锁，读取数据时不允许修改防止重复读。 排它锁： 又称写锁，简称 X 锁，当一个事务为数据加上写锁时，其它请求不能再为数据加任何锁，避免了出现脏数据和脏读的问...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL 锁的分类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-13T01:18:18.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/javaknowledge/docs/mysql_lock.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"MySQL 锁的分类"}],["meta",{"property":"og:description","content":"MySQL 锁的分类 基于属性分类 共享锁： 共享锁又称为读锁，简称 S 锁，当一个事务为数据加上读锁以后，其他事务只能对该数据加读锁，而不能对数据加写锁，直到所有的读锁释放之后其他事务才能进行加写锁，读取数据时不允许修改防止重复读。 排它锁： 又称写锁，简称 X 锁，当一个事务为数据加上写锁时，其它请求不能再为数据加任何锁，避免了出现脏数据和脏读的问..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-13T01:18:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-13T01:18:18.000Z"}]]},"git":{"createdTime":1640699484000,"updatedTime":1747099098000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"},{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":1.77,"words":532},"filePathRelative":"javaknowledge/docs/mysql_lock.md","excerpt":"\\n<h2>基于属性分类</h2>\\n<ul>\\n<li>共享锁：</li>\\n</ul>","autoDesc":true}');export{c as comp,m as data};
