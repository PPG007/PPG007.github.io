import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as i,o as n}from"./app-rQI8KFp-.js";const o={};function r(l,t){return n(),a("div",null,t[0]||(t[0]=[i('<h1 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试"><span>单元测试</span></a></h1><h2 id="tdd-三定律" tabindex="-1"><a class="header-anchor" href="#tdd-三定律"><span>TDD 三定律</span></a></h2><ul><li>定律一：在编写不能通过的单元测试前，不可编写生产代码。</li><li>定律二：只可编写刚好无法通过的单元测试，不能编译也算。</li><li>定律三：只可编写刚好足以通过当前失败测试的生产代码。</li></ul><h2 id="整洁的测试" tabindex="-1"><a class="header-anchor" href="#整洁的测试"><span>整洁的测试</span></a></h2><p>整洁测试要具有可读性，明确、简洁、有表达力。</p><p>三个环节：构造测试数据——操作测试数据——检验操作结果。</p><h2 id="每个测试一个断言" tabindex="-1"><a class="header-anchor" href="#每个测试一个断言"><span>每个测试一个断言</span></a></h2><p>在每个测试方法中使用断言语句可以将测试归结为一个可快速方便地理解的结论。</p><p>每个测试方法只测试一个含义。</p><h2 id="f-i-r-s-t" tabindex="-1"><a class="header-anchor" href="#f-i-r-s-t"><span>F.I.R.S.T</span></a></h2><ul><li>F：测试应该够快。</li><li>I：测试应该相互独立，某个测试不应为下一个测试设定条件。</li><li>R：测试应当可以在任何环境中重复通过。</li><li>S：测试应该有布尔值输出，测试应该自足验证。</li><li>T：测试应该及时编写，恰好在其通过的生产代码之前编写。</li></ul>',11)]))}const s=e(o,[["render",r]]),d=JSON.parse('{"path":"/clean-code/docs/unit_test.html","title":"单元测试","lang":"zh-CN","frontmatter":{"description":"单元测试 TDD 三定律 定律一：在编写不能通过的单元测试前，不可编写生产代码。 定律二：只可编写刚好无法通过的单元测试，不能编译也算。 定律三：只可编写刚好足以通过当前失败测试的生产代码。 整洁的测试 整洁测试要具有可读性，明确、简洁、有表达力。 三个环节：构造测试数据——操作测试数据——检验操作结果。 每个测试一个断言 在每个测试方法中使用断言语句...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"单元测试\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2021-12-26T13:38:59.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/clean-code/docs/unit_test.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"单元测试"}],["meta",{"property":"og:description","content":"单元测试 TDD 三定律 定律一：在编写不能通过的单元测试前，不可编写生产代码。 定律二：只可编写刚好无法通过的单元测试，不能编译也算。 定律三：只可编写刚好足以通过当前失败测试的生产代码。 整洁的测试 整洁测试要具有可读性，明确、简洁、有表达力。 三个环节：构造测试数据——操作测试数据——检验操作结果。 每个测试一个断言 在每个测试方法中使用断言语句..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2021-12-26T13:38:59.000Z"}],["meta",{"property":"article:modified_time","content":"2021-12-26T13:38:59.000Z"}]]},"git":{"createdTime":1640525939000,"updatedTime":1640525939000,"contributors":[{"name":"PPG007","username":"PPG007","email":"1658272229@com请求","commits":1,"url":"https://github.com/PPG007"}]},"readingTime":{"minutes":0.91,"words":274},"filePathRelative":"clean-code/docs/unit_test.md","excerpt":"\\n<h2>TDD 三定律</h2>\\n<ul>\\n<li>定律一：在编写不能通过的单元测试前，不可编写生产代码。</li>\\n<li>定律二：只可编写刚好无法通过的单元测试，不能编译也算。</li>\\n<li>定律三：只可编写刚好足以通过当前失败测试的生产代码。</li>\\n</ul>","autoDesc":true}');export{s as comp,d as data};
